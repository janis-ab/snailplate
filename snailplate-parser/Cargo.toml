[package]
name = "snailplate-parser"
version = "0.1.0"
edition = "2021"



[features]
# This feature flag enforces that tokenbuf is used in all-in/all-out manner not
# like dequeue. This is intended for testing in development phase.
tokenbuf_push_guard = []

# When enabled, all tokenbuf actions will print useful output.
dbg_tokenbuf_verbose = []

# This is intended for debuging, when we want to see some output from Tokenizer.
dbg_tokenizer_verbose = []

# This is intended to write tests, that shall fail at the moment, but will pass
# in the future. For example, some tricky tokenization/parsing cases that i do
# not want to deal with at the moment. I.e. "@if( x == ')trick' )". At this
# point in time, Tokenizer will stop at first open parenthesis. But for such
# cases i will write some tests not to forget them, but implement the feature
# some time in future.
future_passing_tests = []

# By default library compiles in various value checks for unexpected cases, such
# as bad positions, sizes for tokens, etc. It is allowed to remove those guards
# to increase tokenization speed at the cost of integrity safeties.
unguarded_tokenizer_integrity = []

# If this feature is set, then tokenlist_match_or_fail will only print received
# tokens from Tokenized. This feature is intended for snailplate
# development and testing only.
tokenlist_match_or_fail_print_only = []



# To test all features, run:
# cargo test-all-features
[package.metadata.cargo-all-features]

# Exclude these features from build matrix. In general features that are related
# to output verbosity while developing are not interesting for automated feature
# variation testing.
denylist = ["dbg_tokenbuf_verbose"]